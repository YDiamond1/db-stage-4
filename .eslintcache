[{"C:\\Users\\PK\\Desktop\\db-stage-4\\src\\index.js":"1","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\App.js":"2","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\reportWebVitals.js":"3","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\useAuth.js":"4","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Home.js":"5","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Alerts.js":"6","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Header.js":"7","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\LoginPage.js":"8","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Suitability.js":"9","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Table.js":"10","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\requests.js":"11","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\requestTable.js":"12","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Row.js":"13"},{"size":475,"mtime":1611518711569,"results":"14","hashOfConfig":"15"},{"size":1482,"mtime":1611527679780,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1611518711569,"results":"17","hashOfConfig":"15"},{"size":1019,"mtime":1611518711570,"results":"18","hashOfConfig":"15"},{"size":788,"mtime":1611528455307,"results":"19","hashOfConfig":"15"},{"size":566,"mtime":1611522052774,"results":"20","hashOfConfig":"15"},{"size":1085,"mtime":1611518711565,"results":"21","hashOfConfig":"15"},{"size":3740,"mtime":1611518711566,"results":"22","hashOfConfig":"15"},{"size":6423,"mtime":1611527679783,"results":"23","hashOfConfig":"15"},{"size":650,"mtime":1611524686922,"results":"24","hashOfConfig":"15"},{"size":614,"mtime":1611519110558,"results":"25","hashOfConfig":"15"},{"size":1000,"mtime":1611520561097,"results":"26","hashOfConfig":"15"},{"size":214,"mtime":1611518711566,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1f27nyy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"C:\\Users\\PK\\Desktop\\db-stage-4\\src\\index.js",[],["59","60"],"C:\\Users\\PK\\Desktop\\db-stage-4\\src\\App.js",[],"C:\\Users\\PK\\Desktop\\db-stage-4\\src\\reportWebVitals.js",[],"C:\\Users\\PK\\Desktop\\db-stage-4\\src\\useAuth.js",[],"C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Home.js",["61","62"],"C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Alerts.js",[],"C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Header.js",["63"],"import {Button, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport {requests} from \"../requests\";\r\n\r\nexport function Header(props){\r\n    return(\r\n        <Navbar fixed={\"top\"} bg=\"light\" className={\"mb-4\"} expand=\"lg\">\r\n            <Navbar.Brand>Lobster</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"/\">Main</Nav.Link>\r\n                    <Nav.Link href=\"/login\">Add a person</Nav.Link>\r\n                    <Nav.Link href=\"/suitability\">Suitability</Nav.Link>\r\n                    <Nav.Link href=\"#link\" disabled>Security</Nav.Link>\r\n                </Nav>\r\n                <Button variant=\"dark\" onClick={(event =>{\r\n                    requests.get(\"/api/lodger/update_day\")\r\n                        .then(resp =>\r\n                            window.location.reload(false)\r\n                        )\r\n                })}>Update a day</Button>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n    );\r\n}\r\n","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\LoginPage.js",["64"],"import {Button, Card, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router\";\r\nimport {useState} from \"react\";\r\nimport {requests} from \"../requests\";\r\n\r\nexport function LoginPage(props){\r\n    const inputs = [\"Name\", \"Age\", \"Main feature\", \"Chosen Animal\"];\r\n    const [person, setPerson] = useState({name:\"\", age:\"\", main_feature:\"\", chosen_animal:\"\", sex:\"\"});\r\n    const history = useHistory();\r\n\r\n    const handler = nameOfInput => event => {\r\n        setPerson((state, props)=>{\r\n            state[nameOfInput.toLowerCase().replaceAll(\" \",\"_\")] = event.target.value;\r\n            return({...state});\r\n        });\r\n    }\r\n\r\n    const redirect = (ev) => {\r\n        ev.preventDefault();\r\n        //history.push(\"/\");\r\n        console.log(person);\r\n        requests.post(props.toUrl, person)\r\n            .then(\r\n            resp => props.handlerShow(\"Added a lodger\",\"Alert\")\r\n        )\r\n            .catch(\r\n                err => {\r\n                    props.handlerShow(\"This lodger existed\", \"error\");\r\n                    console.log(err);\r\n                }\r\n            )\r\n    };\r\n    return (\r\n        <div className=\"auth-page\">\r\n            <Container className=\"full-height align-items-center mb-1\">\r\n                <Row className=\"justify-content-center \">\r\n                    <Col lg={6}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title><h1 className=\"text-center\">Create a person</h1></Card.Title>\r\n                                <Card.Text>\r\n                                    <Form onSubmit={redirect}>\r\n                                        {\r\n                                            inputs.map(nameOfInput=>(\r\n                                                <Form.Group as={Col} controlId={nameOfInput.toLowerCase().replaceAll(\" \",\"_\")}>\r\n                                                    <Form.Label>{nameOfInput}</Form.Label>\r\n                                                    <input\r\n                                                        className=\"form-control form-control-lg\"\r\n                                                        type=\"text\"\r\n                                                        value={person[nameOfInput]}\r\n                                                        onChange={handler(nameOfInput)} />\r\n                                                </Form.Group>\r\n                                            )\r\n                                            )\r\n                                        }\r\n                                        <Form.Group as={Col} controlId=\"radio\">\r\n                                            <div id=\"sex\">\r\n                                                <Form.Check onChange={handler(\"sex\")} name=\"sex\" inline label=\"Male\" type=\"radio\" id=\"male\" value=\"male\"/>\r\n                                                <Form.Check onChange={handler(\"sex\")} inline name=\"sex\" label=\"Female\" type=\"radio\" id=\"female\" value=\"female\"/>\r\n                                            </div>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} controlId=\"Button\">\r\n                                            <Button variant=\"dark\" type=\"submit\" >\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Suitability.js",["65","66","67","68","69","70","71","72"],"import {Button, Col, Container, FormControl, InputGroup, ListGroup, ListGroupItem, Row} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport {requests} from \"../requests\";\r\nimport {isNodeFlagSet} from \"tsutils\";\r\n\r\nexport function Suitability(props){\r\n\r\n    const [lodger1, setLodger1] = useState(null);\r\n    const [lodger2, setLodger2] = useState(null);\r\n    const [lodgers1, setLodgers1] = useState([]);\r\n    const [lodgers2, setLodgers2] = useState([]);\r\n    const [suitability, setSuitability] = useState(null);\r\n\r\n\r\n    console.log(lodger1,lodger2,lodgers1,lodgers2);\r\n    const search1 = event =>{\r\n        requests.get(`/api/search?search=${event.target.value}`)\r\n            .then(resp =>{\r\n                if(resp.data.count == 1){\r\n                    setLodger1(resp.data.results[0]);\r\n                }\r\n                else if(resp.data.count >1){\r\n                    setLodgers1(resp.data.results)\r\n                }\r\n            })\r\n            .catch(error =>\r\n                setLodger1(\"Not Found\")\r\n            )\r\n    }\r\n    const search2 = event =>{\r\n        requests.get(`/api/search?search=${event.target.value}`)\r\n            .then(resp =>{\r\n                if(resp.data.count == 1){\r\n                    setLodger2(resp.data.results[0]);\r\n                }\r\n                else if(resp.data.count >1){\r\n                    setLodgers2(resp.data.results)\r\n                }\r\n            })\r\n            .catch(error =>\r\n                setLodger2(\"Not Found\")\r\n            )\r\n    }\r\n\r\n    function Total(props){\r\n        if(suitability == null) return (<div id=\"button_of_couple\"></div>);\r\n        else if(suitability != \"Not Found\") {\r\n            let message = \"\";\r\n            let variant = \"\";\r\n            if (Math.abs(suitability.mutual_interest) <= 10) {\r\n                message = \"Super couple\"\r\n                variant = \"success\"\r\n            } else if (Math.abs(suitability.mutual_interest) <= 20){\r\n                message = \"Excelent couple\"\r\n                variant = \"primary\"\r\n            }\r\n            else if(Math.abs(suitability.mutual_interest) <= 50) {\r\n                message = \"Good couple\"\r\n                variant = \"warning\"\r\n            }\r\n            else {\r\n                message = \"Bad couple\"\r\n                variant = \"danger\"\r\n            }\r\n            return (\r\n                <Button variant={variant} className=\"my-button circle-btn\" block onClick={ev => {\r\n                    let man_id=\"\", woman_id=\"\";\r\n                    if(lodger1.sex == \"male\"){\r\n                        man_id = lodger1.person_id;\r\n                        woman_id = lodger2.person_id\r\n                    }\r\n                    else{\r\n                        man_id = lodger2.person_id;\r\n                        woman_id = lodger1.person_id;\r\n                    }\r\n                    requests.get(`/api/couples/set?man_id=${man_id}&woman_id=${woman_id}`)\r\n                        .then(resp => props.handlerShow(\"Couple have created\", \"Alert\"))\r\n                        .catch(error => props.handlerShow(\"Couple haven't created\", \"Error\"))\r\n                }\r\n                }>{message}</Button>\r\n            );\r\n\r\n        }\r\n        else return (<p className=\"h2 text-center\">Unable to create a pair</p> )\r\n    }\r\n\r\n    function List(lodger){\r\n        if(lodger == \"Not Found\")\r\n            return (<ListGroup>\r\n                {\r\n                   <ListGroupItem>{lodger}</ListGroupItem>\r\n                }\r\n            </ListGroup>)\r\n        if(lodger != null){\r\n            return (\r\n                <ListGroup variant={\"flush\"} >\r\n                {\r\n                    Object.entries(lodger).map(([key, value]) => <ListGroupItem>{key + \": \" + value}</ListGroupItem>)\r\n                }\r\n                </ListGroup>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className=\"justify-content-center full-height align-items-center\" >\r\n        <Row className=\"halffull-height-row1 align-content-end\">\r\n           <Col lg={4}>\r\n               <label htmlFor=\"search1\" className={\"h1\"}>Search</label>\r\n               <InputGroup className=\"mb-3\">\r\n                   <FormControl\r\n                       id={\"search1\"}\r\n                       placeholder=\"Name of lodger\"\r\n                       list=\"datalistOptions\"\r\n                       onChange={search1}\r\n                   />\r\n                   <datalist id=\"datalistOptions\">\r\n                       {\r\n                           lodgers1.map(value => <option value={value.name}/>)\r\n                       }\r\n                   </datalist>\r\n               </InputGroup>\r\n           </Col>\r\n\r\n\r\n           <Col lg={4} className={\"justify\"}>\r\n            <Button variant={\"dark\"} disabled={!(lodger1!=null && lodger2!=null && lodger1!=\"Not Found\" && lodger2!=\"Not Found\")} block className={\"my-button\"}\r\n                    onClick={ev =>\r\n                requests.get(`/api/suitability/get/?man_id=${lodger1.person_id}&woman_id=${lodger2.person_id}`)\r\n                    .then(resp=>setSuitability(resp.data[0]))\r\n                    .catch(error => setSuitability(\"Not Found\"))\r\n                    } >\r\n                See a chance\r\n            </Button>\r\n           </Col>\r\n\r\n\r\n           <Col lg={4}>\r\n               <label htmlFor=\"search2\" className={\"h1\"}>Search</label>\r\n               <InputGroup className=\"mb-3\">\r\n                   <FormControl\r\n                       id={\"search2\"}\r\n                       placeholder=\"Name of lodger\"\r\n                       list=\"datalistOptions2\"\r\n                       onChange={search2}\r\n                   />\r\n                   <datalist id=\"datalistOptions2\">\r\n                       {\r\n                           lodgers2.map(value => <option value={value.name}/> )\r\n                       }\r\n                   </datalist>\r\n               </InputGroup>\r\n           </Col>\r\n        </Row>\r\n\r\n\r\n\r\n        <Row className={\"justify-content-center halffull-height-row2 align-items-start\"}>\r\n            <Col lg={4}>\r\n                {\r\n                    List(lodger1)\r\n                }\r\n            </Col>\r\n            <Col lg={4}>\r\n                {\r\n                    <Total handlerShow={props.handlerShow}/>\r\n                }\r\n            </Col>\r\n            <Col lg={4}>\r\n                {\r\n                    List(lodger2)\r\n                }\r\n            </Col>\r\n        </Row>\r\n        </Container>\r\n    );\r\n}\r\n","C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Table.js",[],"C:\\Users\\PK\\Desktop\\db-stage-4\\src\\requests.js",[],"C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\requestTable.js",["73","74","75","76"],"C:\\Users\\PK\\Desktop\\db-stage-4\\src\\components\\Row.js",["77"],"export function MRow(props){\r\n    const values=[];\r\n\r\n    return (\r\n        <tr>\r\n            {\r\n                Object.values(props.values).map(value => <td>{value}</td>)\r\n            }\r\n        </tr>\r\n    );\r\n}\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":9,"nodeType":"84","messageId":"85","endLine":1,"endColumn":15},{"ruleId":"82","severity":1,"message":"86","line":6,"column":11,"nodeType":"84","messageId":"85","endLine":6,"endColumn":17},{"ruleId":"82","severity":1,"message":"87","line":1,"column":30,"nodeType":"84","messageId":"85","endLine":1,"endColumn":41},{"ruleId":"82","severity":1,"message":"88","line":9,"column":11,"nodeType":"84","messageId":"85","endLine":9,"endColumn":18},{"ruleId":"82","severity":1,"message":"89","line":4,"column":9,"nodeType":"84","messageId":"85","endLine":4,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":19,"column":36,"nodeType":"92","messageId":"93","endLine":19,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":33,"column":36,"nodeType":"92","messageId":"93","endLine":33,"endColumn":38},{"ruleId":"90","severity":1,"message":"94","line":47,"column":29,"nodeType":"92","messageId":"93","endLine":47,"endColumn":31},{"ruleId":"90","severity":1,"message":"91","line":68,"column":36,"nodeType":"92","messageId":"93","endLine":68,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":88,"column":19,"nodeType":"92","messageId":"93","endLine":88,"endColumn":21},{"ruleId":"90","severity":1,"message":"94","line":127,"column":91,"nodeType":"92","messageId":"93","endLine":127,"endColumn":93},{"ruleId":"90","severity":1,"message":"94","line":127,"column":115,"nodeType":"92","messageId":"93","endLine":127,"endColumn":117},{"ruleId":"82","severity":1,"message":"95","line":2,"column":9,"nodeType":"84","messageId":"85","endLine":2,"endColumn":12},{"ruleId":"82","severity":1,"message":"96","line":3,"column":9,"nodeType":"84","messageId":"85","endLine":3,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":11,"column":36,"nodeType":"92","messageId":"93","endLine":11,"endColumn":38},{"ruleId":"97","severity":1,"message":"98","line":15,"column":7,"nodeType":"99","endLine":15,"endColumn":9,"suggestions":"100"},{"ruleId":"82","severity":1,"message":"101","line":2,"column":11,"nodeType":"84","messageId":"85","endLine":2,"endColumn":17},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'RTable' is defined but never used.","Identifier","unusedVar","'points' is assigned a value but never used.","'NavDropdown' is defined but never used.","'history' is assigned a value but never used.","'isNodeFlagSet' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Col' is defined but never used.","'requests_w' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.fromUrl'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'values' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [props.fromUrl]",{"range":"107","text":"108"},[662,664],"[props.fromUrl]"]